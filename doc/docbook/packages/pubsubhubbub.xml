<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book lang="en">
  <bookinfo>
    <title>PubSubHubBub</title>
    <releaseinfo>$Revision: 654 $</releaseinfo>
    <pubdate>$Date: 2012-04-08 14:01:34 +0200 (So, 08. Apr 2012) $</pubdate>
  </bookinfo>
  <chapter xml:id="pubsubhubbub.introduction">
    <title>Introduction</title>
    <para>@todo</para>
  </chapter>
  <chapter xml:id="pubsubhubbub.examples">
    <title>Examples</title>
    <para>@todo</para>
  </chapter>
  <appendix xml:id="pubsubhubbub.synopsis">
    <title>Reference (3)</title>
    <sect1>
      <title>PSX_PubSubHubBub</title>
      <para>This package is to help implementing an pubsubhubbub subscriber or publisher.
If you add new content to your feed you have to inform the hub about that.
You can use the method "notification" to send an content notification i.e.
<code>
$http = new PSX_Http(new PSX_Http_Handler_Curl());
$pshb = new PSX_PubSubHubBub($http);
$url  = ''; # this is the absolute url to your feed

$pshb-&gt;notification(new PSX_Url('http://pubsubhubbub.appspot.com'), $url);
</code>

To implement a subscriber you have todo the following steps. First you have
to subscribe to a topic (a topic is an url to an ATOM feed) you can use the
request method to subscribe or unsubscribe to an topic i.e.
<code>
$http  = new PSX_Http(new PSX_Http_Handler_Curl());
$pshb  = new PSX_PubSubHubBub($http);
$topic = new PSX_Url(''); # this is an url to an ATOM feed that you want subscribe

try
{
	# first we discover the hub
	$hub = $pshb-&gt;discovery($topic);

	if(!empty($hub))
	{
		# url to the module wich extends the class psx_net_pubsubhubbub_callback
		$callback = new PSX_Url('http://google.de');
		$topic    = new PSX_Url('http://google.de');

		if($pshb-&gt;request($hub, $callback, 'subscribe', $topic, 'async'))
		{
			echo 'You have successful subscribe a topic'
		}
	}
	else
	{
		throw new PSX_Exception('Couldnt discover hub in feed url');
	}
}
catch(Exception $e)
{
	echo 'Error: ' . $e-&gt;getMessage();
}
</code>

More informations howto implement the callback at PubSubHubBub/CallbackAbstract.php</para>
      <classsynopsis>
        <ooclass>
          <classname>PSX_PubSubHubBub</classname>
        </ooclass>
        <fieldsynopsis>
          <modifier>const</modifier>
          <type>integer</type>
          <varname>ATOM</varname>
          <initializer>1</initializer>
        </fieldsynopsis>
        <fieldsynopsis>
          <modifier>const</modifier>
          <type>integer</type>
          <varname>RSS2</varname>
          <initializer>2</initializer>
        </fieldsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>__construct</methodname>
          <methodparam>
            <type>mixed</type>
            <parameter>http</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>notification</methodname>
          <methodparam>
            <type>string</type>
            <parameter>endpoint</parameter>
          </methodparam>
          <methodparam>
            <type>string</type>
            <parameter>topic</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <type>boolean</type>
          <methodname>request</methodname>
          <methodparam>
            <type>string</type>
            <parameter>endpoint</parameter>
          </methodparam>
          <methodparam>
            <type>string</type>
            <parameter>callback</parameter>
          </methodparam>
          <methodparam>
            <type>string</type>
            <parameter>mode</parameter>
          </methodparam>
          <methodparam>
            <type>string</type>
            <parameter>topic</parameter>
          </methodparam>
          <methodparam>
            <type>string</type>
            <parameter>verify</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>string</type>
            <parameter>leaseSeconds</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>string</type>
            <parameter>secret</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>string</type>
            <parameter>verifyToken</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <type>PSX_Url|boolean</type>
          <methodname>discover</methodname>
          <methodparam>
            <type>PSX_Url</type>
            <parameter>url</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>mixed</type>
            <parameter>type</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>getLastDiscoveredHub</methodname>
          <void/>
        </methodsynopsis>
      </classsynopsis>
    </sect1>
    <sect1>
      <title>PSX_PubSubHubBub_CallbackAbstract</title>
      <para>PSX_PubSubHubBub_CallbackAbstract</para>
      <classsynopsis>
        <ooclass>
          <classname>PSX_PubSubHubBub_CallbackAbstract</classname>
        </ooclass>
        <ooclass>
          <classname>PSX_Module_ApiAbstract</classname>
        </ooclass>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>__construct</methodname>
          <methodparam>
            <type>mixed</type>
            <parameter>location</parameter>
          </methodparam>
          <methodparam>
            <type>mixed</type>
            <parameter>base</parameter>
          </methodparam>
          <methodparam>
            <type>mixed</type>
            <parameter>basePath</parameter>
          </methodparam>
          <methodparam>
            <type>mixed</type>
            <parameter>uriFragments</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>getDependencies</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>_ini</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>onLoad</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>onGet</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>onPost</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>onPut</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>onDelete</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>processResponse</methodname>
          <methodparam>
            <type>mixed</type>
            <parameter>content</parameter>
          </methodparam>
        </methodsynopsis>
      </classsynopsis>
    </sect1>
    <sect1>
      <title>PSX_PubSubHubBub_Exception</title>
      <para>PSX_PubSubHubBub_Exception</para>
      <classsynopsis>
        <ooclass>
          <classname>PSX_PubSubHubBub_Exception</classname>
        </ooclass>
        <ooclass>
          <classname>PSX_Exception</classname>
        </ooclass>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>__construct</methodname>
          <methodparam choice="opt">
            <type>mixed</type>
            <parameter>message</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>mixed</type>
            <parameter>code</parameter>
          </methodparam>
          <methodparam choice="opt">
            <type>mixed</type>
            <parameter>previous</parameter>
          </methodparam>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getMessage</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getCode</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getFile</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getLine</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getTrace</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getPrevious</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>final</modifier>
          <modifier>public</modifier>
          <methodname>getTraceAsString</methodname>
          <void/>
        </methodsynopsis>
        <methodsynopsis>
          <modifier>public</modifier>
          <methodname>__toString</methodname>
          <void/>
        </methodsynopsis>
      </classsynopsis>
    </sect1>
  </appendix>
</book>
